using C;

func malloc(UInt): &Void;
func realloc(&Void, UInt): &Void;
func free(&Void);

func memset(&Void, Int32, Int): &Void;
func memchr(&const Void, Int, Int): &Void;
func memcmp(&const Void, &const Void, Int): Int32;
func memcpy(&Void, Int, Int): &Void;
func memmove(&Void, Int, Int): &Void;

func strcpy(&Char, &const Char);
func strncpy(&Char, &const Char, Int);
func strcat(&Char, &const Char);
func strncat(&Char, &const Char, Int);
func strcmp(&Char, &const Char): Int;
func strncmp(&Char, &const Char, Int): Int;
func strchr(&const Char, Char): &Char;

#define stdin 0
#define stdout 1
#define stderr 2

type C_char = Char;
type C_short = Short;
type C_int = Int32;
type C_long = Int;
type C_size_t = UInt;
type C_FILE_PTR = &Void;

global C_NULL: &Void();
global C_EOF: C_int = -1d;

func putchar(const Char);
func getchar(): const Char;
func fflush(Int);
func fdopen(Int): C_FILE_PTR;
func fgetc(C_FILE_PTR): const Char;
func fputc(const Char, C_FILE_PTR);
func fgets(&Char, Int, C_FILE_PTR);
func fputs(&const Char, C_FILE_PTR);
func gets(&Char);
func puts(&const Char);
